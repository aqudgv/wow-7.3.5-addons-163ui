--[[
    https://uWow.biz/
    Author: Glazzer
]]

local GlobalAddonName, NS = ...

local MPR = CreateFrame("Frame")
do
    MPR.Version = GetAddOnMetadata(GlobalAddonName, "Version") or ""
    MPR.LoadInfo = GlobalAddonName .. " " .. MPR.Version .. " loaded."
    MPR.AddonName = GlobalAddonName
end

-- Math
local Band = bit.band
local RShift = bit.rshift

-- Cashe
local UI_HOOKS = {}

-- Utils
do
    function MPR:IsNumber(value)
        return type(value) == "number"
    end

    function MPR:RemoveItemFromTable(t, i)
        table.remove(t, i)
    end

    function MPR:SplitString(str, sep, incSep)
        if incSep then
            str = str .. sep
        else
            str = str .. ":"
        end

        local result = {}
        local itr, pos, stop = 1, 1, 1

        repeat
            stop = strfind(str, sep, pos)
            if stop ~= nil then
                local _str = strsub(str, pos, stop - 1)
                result[itr] = _str
    
                pos = stop + 1
                itr = itr + 1
            end
        until stop == nil
    
        return result
    end

    function MPR:RGBToStringFormat(r, g, b)
        if MPR:IsNumber(r) and MPR:IsNumber(g) and MPR:IsNumber(b) then
            if r <= 1 and g <= 1 and b <= 1 then
                r = r * 255
                g = g * 255
                b = b * 255
                return ("|cff%.2x%.2x%.2x"):format(r, g, b)
            end
        end
        
        return ("|cff%.2x%.2x%.2x"):format(r, g, b)
    end

    function MPR:StarValueToStringFormat(value)
        if MPR:IsNumber(value) then
            if value == 0 then
                return ""
            end

            local star = ""
            if value == 3 then
                star = "+++"
            elseif value == 2 then
                star = "++"
            elseif value == 1 then
                star = "+"
            end

            return "|cFFFFD700" .. star .. "|r"
        end

        return ""
    end

    function MPR:GetNumberGUID(guid)
        if guid then
            local lines = {}
    
            lines = MPR:SplitString(guid, "-", true)
            return tonumber(lines[3], 16)
        end

        return nil
    end

    function MPR:GetRealmID(realmName)
        local realmID = 1

        if realmName then
            if realmName == "argusx100" then
                realmID = 3
            elseif realmName == "argusx1" then
                realmID = 5
            elseif realmName == "epicx1" then
                realmID = 7
            elseif realmName == "uwowx100" then
                realmID = 67
            elseif realmName == "legionx5" then
                realmID = 88
            end
        end

        return realmID
    end

    function MPR:SendPacket(packet, guid, realmName, realmID)
        local _realmID = 1

        if not realmID then
            if realmName then
                _realmID = MPR:GetRealmID(realmName)
            end
        else
            _realmID = realmID
        end
        
        if (guid and (realmName or realmID)) then
            packet = packet .. "\t" .. tostring(guid) .. ":" .. tostring(_realmID)
            SendAddonMessage("UIMSG_TO_SERVER", packet, "WHISPER", UnitName("player"))
        else
            SendAddonMessage("UIMSG_TO_SERVER", packet .. "\t", "WHISPER", UnitName("player"))
        end
    end

    function MPR:CreateButton(self, sizeW, sizeH, point, pointX, pointY)
        if self then
            local button = CreateFrame("Button", nil, self, "SecureHandlerClickTemplate")

            if sizeW and sizeH then
                button:SetSize(sizeW, sizeH) 
            end
            if point and pointX and pointY then
                button:SetPoint(point, pointX, pointY)
            end

            return button
        end

        return nil
    end

    function MPR:_CreateFrame(self, prefix, sizeW, sizeH, point, pointX, pointY)
        if self then
            self[prefix] = CreateFrame("Frame", nil, self)
            self[prefix]:SetSize(sizeW, sizeH)
            self[prefix]:SetPoint(point, pointX, pointY)
        end
    end

    function MPR:CreateLine(self, prefix, point, pointX, pointY, colorR, colorG, colorB, text)
        if self then
            self[prefix] = self:CreateFontString(nil, "ARTWORK") 
            self[prefix]:SetFontObject("GameFontNormal")
            self[prefix]:SetPoint(point, pointX, pointY)
            self[prefix]:SetTextColor(colorR, colorG, colorB)
            self[prefix]:SetText(text)
        end
    end
end

do
    MPR.Config = CreateFrame("Frame")

    local defaulthConfig =
    {
        enableUnitTooltip = true,
        enableLFGTooltip = false,
        enableFriendsTooltip = false,
        enableWhoTooltip = false,
        enableWhoMessage = false,
        enableGuildTooltip = false,
        useEnglishAbbreviations = false
    }

    function MPR.Config:Set(key, val)
        if MythicPlusRating_DB and MythicPlusRating_DB.Config then
            MythicPlusRating_DB.Config[key] = val
        end
    end

    function MPR.Config:Get(key)
        if MythicPlusRating_DB and MythicPlusRating_DB.Config then
            return MythicPlusRating_DB.Config[key]
        end

        return nil
    end

    function MPR:AddonLoaded()
        if not MythicPlusRating_DB then
            MythicPlusRating_DB = {}
        end

        if not MythicPlusRating_DB.Config then
            MythicPlusRating_DB.Config =
            {
                enableUnitTooltip = true,
                enableLFGTooltip = false,
                enableFriendsTooltip = false,
                enableWhoTooltip = false,
                enableWhoMessage = false,
                enableGuildTooltip = false,
                dungeonAbreviature = "DEFAULTH"
            }
        end
        
        print(MPR.LoadInfo)
    end
end

-- MPR Functions
do
    local L = NS.L
    local SCORE_TIERS = NS.ScoreTiers

    local ROLE_ICONS =
    {
        [1]     = "|TInterface\\AddOns\\MythicPlusRating\\Icons\\Roles:14:14:0:0:64:64:38:56:0:18|t", --Tank
        [2]     = "|TInterface\\AddOns\\MythicPlusRating\\Icons\\Roles:14:14:0:0:64:64:19:37:0:18|t", --Heal
        [4]     = "|TInterface\\AddOns\\MythicPlusRating\\Icons\\Roles:14:14:0:0:64:64:0:18:0:18|t"   --DPS
    }

    local REALM_NAMES = 
    {
        [1]     = "Test1",
        [2]     = "Test2",
        [3]     = "ArgusX100",
        [5]     = "ArgusX1",
        [7]     = "EpicX1",
        [67]    = "UWowX100",
        [88]    = "UWoWX5"
    }

    local CLASS_COLORS =
    {
        [1]     = { 199, 156, 110 },    --Warrior
        [2]     = { 245, 140, 186 },    --Paladin
        [3]     = { 171, 212, 115 },    --Hunter
        [4]     = { 255, 245, 105 },    --Rogue
        [5]     = { 255, 255, 255 },    --Priest
        [6]     = { 196, 30,  59  },    --Deathknight
        [7]     = { 0,   112, 222 },    --Shaman
        [8]     = { 105, 204, 240 },    --Mage
        [9]     = { 148, 130, 201 },    --Warlock
        [10]    = { 0,   255, 150 },    --Monk
        [11]    = { 255, 125, 10  },    --Druid
        [12]    = { 163, 48,  201 }     --Demonhunter
    }

    local CHALLENGE_NAMES =
    {
        ["SHORT"] =
        {
            [197]   = L.DUNGEON_SHORT_NAME_EOA,
            [198]   = L.DUNGEON_SHORT_NAME_DHT,
            [199]   = L.DUNGEON_SHORT_NAME_BRH,
            [200]   = L.DUNGEON_SHORT_NAME_HOV,
            [206]   = L.DUNGEON_SHORT_NAME_NL,
            [207]   = L.DUNGEON_SHORT_NAME_VOTW,
            [208]   = L.DUNGEON_SHORT_NAME_MOS,
            [209]   = L.DUNGEON_SHORT_NAME_ARC,
            [210]   = L.DUNGEON_SHORT_NAME_COS,
            [227]   = L.DUNGEON_SHORT_NAME_LOWR,
            [233]   = L.DUNGEON_SHORT_NAME_COEN,
            [234]   = L.DUNGEON_SHORT_NAME_UPPR,
            [239]   = L.DUNGEON_SHORT_NAME_SEAT
        },
        ["DEFAULTH"] =
        {
            [197]   = L.DUNGEON_NAME_EOA,
            [198]   = L.DUNGEON_NAME_DHT,
            [199]   = L.DUNGEON_NAME_BRH,
            [200]   = L.DUNGEON_NAME_HOV,
            [206]   = L.DUNGEON_NAME_NL,
            [207]   = L.DUNGEON_NAME_VOTW,
            [208]   = L.DUNGEON_NAME_MOS,
            [209]   = L.DUNGEON_NAME_ARC,
            [210]   = L.DUNGEON_NAME_COS,
            [227]   = L.DUNGEON_NAME_LOWR,
            [233]   = L.DUNGEON_NAME_COEN,
            [234]   = L.DUNGEON_NAME_UPPR,
            [239]   = L.DUNGEON_NAME_SEAT
        }
    }

    function MPR:GetScoreColor(score, isTotal)
        local r, g, b = 0.62, 0.62, 0.62

        if MPR:IsNumber(score) then
            if isTotal then
                if score == 0 then
                    return 1, 1, 1
                end
            else
                score = score * 9
            end

            if SCORE_TIERS then
                for i = 1, #SCORE_TIERS do
                    local tier = SCORE_TIERS[i]
     
                    if tier then
                        if score >= tier.Score then
                            local color = tier.Color
                            r, g, b = color[1], color[2], color[3]
                            break
                        end
                    end
                end
            end
        end

        return r, g, b
    end

    function MPR:GetRoleIcon(roleID)
        local icon = ""

        if MPR:IsNumber(roleID) then
            for i = 0, 32 do
                local mask = Band(RShift(32, i), roleID)

                if mask > 0 then
                    icon = icon .. ROLE_ICONS[mask] .. " "
                end
            end
        end

        return icon
    end

    function MPR:GetRealmName(realmID)
        if MPR:IsNumber(realmID) then
            return REALM_NAMES[realmID] or ""
        end

        return ""
    end

    function MPR:GetClassColor(classID)
        if MPR:IsNumber(classID) then
            return MPR:RGBToStringFormat(CLASS_COLORS[classID][1], CLASS_COLORS[classID][2], CLASS_COLORS[classID][3])
        end

        return MPR:RGBToStringFormat(1, 1, 1)
    end

    function MPR:GetChallengeName(challengeID, format)
        if MPR:IsNumber(challengeID) then
            return CHALLENGE_NAMES[format][challengeID] or ""
        end

        return ""
    end
end

-- Hooks
do
    local function ApplyHook()
        for i = #UI_HOOKS, 1, -1 do
            local func = UI_HOOKS[i]
            if func() then
                MPR:RemoveItemFromTable(UI_HOOKS, i)
            end
        end
    end
 
    function MPR:ADDON_LOADED(_, addonName)
        if addonName == GlobalAddonName then
            MPR:AddonLoaded()

            MPR:RegisterEvent("CHAT_MSG_ADDON")
            MPR:RegisterEvent("PLAYER_ENTERING_WORLD")
            MPR:RegisterEvent("CHALLENGE_MODE_COMPLETED")
            ApplyHook()
        end
    end
 
    function MPR:PLAYER_ENTERING_WORLD(...)
        if NS.INTERFACE_GUI then
            NS.INTERFACE_GUI:Request(true, false, MPR:GetNumberGUID(UnitGUID("player")))
        end
    end
 
    function MPR:CHALLENGE_MODE_COMPLETED(...)
        if NS.INTERFACE_GUI then
            NS.INTERFACE_GUI:Request(true, false, MPR:GetNumberGUID(UnitGUID("player")))
        end
    end
 
    function MPR:CHAT_MSG_ADDON(_, opcode, msg, ...)
        if opcode == "UIMSG_TO_CLIENT" and msg then
            local packet = MPR:SplitString(msg, ":")

            if packet and #packet > 0 then
                if packet[1] == "UIMSG_M_PLUS_PROFILE_DATA" then
                    local guid = 0

                    for _, packets in pairs(packet) do
                        local params = MPR:SplitString(packets, "|")
                                    
                        if params and #params > 0 then
                            local packetName = tostring(table.remove(params, 1))

                            if guid == 0 then
                                guid = tonumber(packetName)
                            else
                                if NS.INTERFACE_GUI then
                                    NS.INTERFACE_GUI[packetName](NS.INTERFACE_GUI, params, guid)
                                end
                            end
                        end
                    end
                else
                    local params = MPR:SplitString(msg, ":")

                    if params and #params > 0 then
                        local packetName = tostring(table.remove(params, 1))

                        if NS.INTERFACE_GUI then
                            NS.INTERFACE_GUI[packetName](NS.INTERFACE_GUI, params)
                        end
                    end
                end
            end
        end
    end
end
 
-- UI Hooks
do
    UI_HOOKS[#UI_HOOKS + 1] = function()
        if _G.PVEFrame then
            local function Show()
                if NS.INTERFACE_GUI then
                    NS.INTERFACE_GUI:Request(false, true, MPR:GetNumberGUID(UnitGUID("player")))
                end
            end
 
            local function Hide()
                if NS.INTERFACE_GUI then
                    NS.INTERFACE_GUI:HideGUI()
                end
            end
 
            PVEFrame:HookScript("OnShow", Show)
            PVEFrame:HookScript("OnHide", Hide)
            return 1
        end
    end
end
 
MPR:RegisterEvent("ADDON_LOADED")
MPR:SetScript("OnEvent", function(_, event, ...)
    MPR[event](MPR, event, ...)
end)
 
NS.MPR = MPR
