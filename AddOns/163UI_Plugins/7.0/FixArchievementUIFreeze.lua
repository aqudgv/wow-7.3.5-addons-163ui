--此列表所有账号都一致，如果有些统计本账号不显示，则通过quantity, skip, id = GetStatistics(id)会返回skip=true
local IDS = {
  [-2] = "01261|344,338,328,321,319,588,9258,9594,1527,5724,6135,6147,6775,377,349,1197,1149,112,10878,107,1057,1042,98,60,57,11234,932,839,837,796,1524,1501,1487,1462,193,10060,10327,1242,1199,933,918,1729,1201,838,1464,1488,798,1198,753,1504,1525,2396,1091,1068,594,1107,2277,1047,527,1125,1337,8278,320,318,9259,9595,11235,59,95,10879,10328,10181,5725,6776,381,378,6136,10880,1067,1069,1108,1200,1229,1231,8286,840,934,11236,5726,1745,6777,2219,10329,1298,10192,10184,1336,1458,1465,1489,1532,9596,333,350,363,197,113,97,56,529,5727,1339,799,1066,1070,1092,1103,1106,10881,108,759,114,2397,9260,9368,1976,326,10330,1490,1505,6779,383,3018,1730,362,8367,345,11237,924,528,1500,1491,5728,10331,919,1299,925,6137,281,9261,8408,353,365,382,189,1535,6778,115,10882,4729,1104,94,1071,1045,800,53,1232,1065,6780,178,4730,1506,829,329,10193,10883,364,1748,1719,5729,1716,7253,7251,1768,49,1072,342,6138,1300,55,5730,1233,9262,330,341,1073,12107,926,922,6781,1111,1492,10884,1467,7254,7250,6139,198,1102,183,6140,5731,367,7255,339,8514,6782,331,801,830,1519,181,1507,1493,931,1301,51,110,10885,1110,1074,9263,6783,1544,1234,7256,366,6141,928,1302,10194,1494,5732,1770,1109,10886,5236,332,8515,1075,5733,1508,103,8681,1495,1076,1043,923,5237,921,1772,1113,1518,9266,8516,6784,6786,1734,10887,54,1044,104,1077,1303,1146,5734,10888,1235,1093,1114,1496,9267,6785,1538,7400,1756,1456,6142,1760,7401,1304,1147,1115,1078,585,10889,1547,1539,6787,10195,1509,5735,1497,593,811,50,4456,1735,1498,6788,1548,1079,1094,10890,1112,1148,9268,1236,7402,5736,9269,101,10893,5737,6143,6989,1080,1150,1549,1540,1526,1510,1305,4556,1486,1499,10196,4779,4777,1550,1738,5738,6144,6990,7223,334,1081,100,10891,1306,1237,5739,7224,346,6983,5795,5797,9271,1977,1095,10894,1545,1511,5232,1082,1546,1536,5798,5796,1238,5773,7240,9272,1083,6789,1773,1097,10892,5233,6145,7263,7242,6737,1774,5774,1740,10197,1512,1084,99,52,10895,7914,6146,105,1085,6790,1239,102,6738,10896,7244,7264,9273,5578,347,1537,10897,1096,8376,1086,8375,3216,1513,7241,1776,9274,7823,7829,7915,5555,6984,1775,10898,7245,10198,7830,7824,1240,1087,1541,6337,5556,9275,1542,812,5557,6791,1514,10899,1088,7825,8370,7247,1098,9430,1241,1741,7917,10900,1099,5558,7826,8369,9276,6148,6792,10199,1089,1515,9553,596,1100,5756,10901,4096,9277,9557,5559,595,7918,1090,1101,10902,1361,4097,9558,10903,6985,370,5560,1372,9278,8373,1366,10904,9559,589,9279,8374,6793,5561,1362,393,10200,5562,9561,7919,590,9280,10981,5564,1371,6794,374,394,1369,7920,10907,10982,5563,5234,9282,5565,10983,6986,5235,1375,9284,9285,6795,395,1374,5566,10984,9286,586,7921,1370,10910,10985,5554,1363,9287,10986,11406,6796,5553,5692,10911,1365,7922,7399,9288,5567,5693,1364,6987,9289,5694,5568,10912,5569,10913,9290,5695,1373,6797,7923,5696,9292,1376,10914,5570,5697,9293,5572,6798,10920,1377,5698,9294,5571,7924,2596,10921,1368,6988,10922,5573,9295,5699,5700,1378,9297,6799,5575,10923,7926,1379,9298,5574,10924,5701,5576,5702,9300,6800,10925,1380,5577,7927,5703,1381,9301,10926,5704,10927,5964,6991,9302,1382,5705,9303,1383,10915,6801,5965,7951,10916,9304,1384,5706,5966,5967,1385,9306,6802,10917,5707,5968,7831,10919,9308,7953,1386,10928,9310,7832,1387,6992,5969,10929,6803,1367,5970,9311,7827,9312,7828,7954,1388,10930,5971,9313,10931,5972,8371,1389,6804,1390,9314,5973,10932,7955,8372,10933,5974,6993,9315,1392,10934,5975,6805,9316,1393,1391,9317,10935,7956,5976,1394,5977,9318,6806,10936,1753,9319,7957,10937,5981,6150,6994,1754,9320,10938,2856,6151,6807,9321,10939,7958,2857,11407,6152,9322,6808,6153,9323,2858,11408,2859,6154,9324,7960,11409,9327,6995,6155,11410,2860,11411,2861,6809,9328,6156,9329,11412,7961,6157,2868,6158,2862,11413,6810,9330,2863,11414,7962,6159,9331,6996,9332,11415,2864,6160,2865,11416,6161,6811,9333,7963,2866,11417,9334,6162,11418,2869,9336,6163,6812,2867,10940,6164,9337,7964,2872,6165,9338,6997,10941,9339,6813,6166,2873,10942,9340,10943,7965,2874,6167,10944,9341,6814,2884,6168,9342,7966,2885,10945,6170,9343,6998,2875,10946,9349,2882,10947,6815,9351,3256,10948,7967,10949,9353,6816,3257,3258,9354,7968,10950,10951,2879,9355,6999,2880,9356,10952,6817,10953,2883,9357,7969,2881,6818,10954,9358,10955,7970,9359,2870,10956,7000,9360,3236,9361,10957,6819,4018,9362,7971,4019,10959,9363,4048,6820,10960,7972,4049,10961,9364,9365,10962,8146,4050,10963,4051,8147,10201,8141,10202,4052,10964,10203,4053,10965,8142,8143,10204,4054,10966,10205,8144,10967,4055,8145,10968,10206,4022,10969,10207,8148,4023,4024,10970,8149,10208,8150,10209,10971,4025,8151,4026,10972,10210,8152,10211,4027,10973,10212,4028,10974,8153,10213,10975,8154,4030,4031,10976,10214,8155,4029,10215,8156,10977,8157,10216,10978,4032,8158,4033,10979,10217,8159,10980,10218,4034,11877,4035,10219,8160,4036,8162,10220,11878,4037,10221,11879,8161,8163,10222,4038,11880,4039,10223,11881,8164,10224,4040,11882,8165,10225,4041,11883,8166,4042,10226,8167,11884,8291,11885,10227,4043,8168,11886,10228,4044,11887,8169,4045,10229,11888,8170,4046,10230,11889,8171,10231,4047,4074,10232,11890,8172,4075,10233,8173,11891,4713,11892,10234,8174,11893,8175,10235,4714,8176,11894,4715,10236,11895,10237,8177,4716,11896,10238,4717,8178,11897,10239,8179,4728,8182,4718,11898,10240,8181,11899,10241,4719,8180,10242,11900,4720,4721,10243,8183,11901,8184,10244,4722,11902,4723,10245,11903,8185,8186,11904,4724,10246,8187,11905,10247,4725,8188,11906,10248,4726,11907,10249,8189,4727,11908,8190,4639,10250,8191,10251,11909,4640,10252,8192,11910,4641,11911,4642,8193,8194,4643,11912,8195,12117,4654,11954,8196,4655,11955,4656,8197,4644,8198,11956,8199,12118,4659,11957,8200,4660,4661,11958,8202,11959,8201,4645,12119,8203,4662,11960,8256,4663,8544,4664,11961,8545,11962,4646,8546,4665,12120,8547,4666,11963,11964,4667,8548,8549,4647,11965,12121,8550,4668,8551,4669,11966,8552,4670,11967,4648,8553,11968,8554,4671,12122,11969,4672,8555,11970,4673,8556,4649,8557,11971,12123,8558,4674,11972,8559,4675,11973,4676,8560,11974,4650,8561,8562,4677,12124,8563,4678,11975,4679,11976,8564,4651,8565,11977,8566,12125,4680,8567,4681,11978,8568,11979,4682,11980,4652,8569,8570,4684,12126,11981,8571,4683,4685,11982,8573,4653,11983,8574,4686,12127,8575,8576,11984,4687,4688,11985,8577,4657,11986,8578,4658,8579,4821,8580,8581,4822,4820,8582,4823,8583,8584,8585,8586,8587,8588,8589,8590,8591,8593,8594,8595,8596,8597,8598,8599,8600,8601,8602,8603,8604,8605,8606,8608,8609,8610,8612,8614,8615,8616,8617,8618,8619,8620,8621,8622,8623,8624,8625,8626,8627,8628,8629,8630,8631,8632,8634,8635,8636,8637,8638",
  [21] = "00002|1501,318",
  [122] = "00001|60",
  [123] = "00003|1057,1107,1108",
  [124] = "00011|57,59,56,1106,1500,7253,7254,7255,7256,8681,593",
  [125] = "00004|321,918,2219,9368",
  [126] = "00005|112,594,113,114,115",
  [127] = "00008|796,798,1229,799,800,7251,7250,801",
  [128] = "00002|1197,1198",
  [130] = "00001|1149",
  [131] = "00006|1042,1047,1067,1066,1045,1065",
  [132] = "00003|1199,1201,1200",
  [133] = "00005|98,95,97,759,94",
  [134] = "00005|349,2277,350,1339,353",
  [135] = "00004|107,1337,1336,108",
  [136] = "00020|588,381,1458,383,382,1719,1111,1110,1109,1113,1114,1115,1112,1486,4779,5795,5796,6737,6738,8376",
  [137] = "00020|1487,1488,1489,1490,1491,1716,1492,1493,1494,1495,1496,1497,1498,1499,4777,5797,5798,7263,7264,8375",
  [140] = "00015|328,753,333,326,919,329,330,331,332,921,1146,1147,1148,1150,334",
  [141] = "00008|193,527,197,528,189,829,198,830",
  [145] = "00022|344,1125,1298,345,1299,1300,922,1301,1302,923,1303,1304,811,1305,1306,346,1773,1774,347,1776,1775,812",
  [147] = "00007|377,378,529,924,925,926,931",
  [152] = "00029|837,838,363,362,365,364,12107,367,366,103,104,1547,1548,101,100,1545,1546,99,102,7823,7824,8370,8369,596,595,370,589,590,374",
  [153] = "00055|839,2396,840,2397,53,49,55,51,5236,5237,54,585,50,1549,1550,5232,5233,52,105,7829,7830,7825,7826,4096,4097,8373,8374,393,394,5234,5235,395,586,5692,5693,5694,5695,5696,5697,5698,5699,5700,5701,5702,5703,5704,5705,5706,5707,7831,7832,7827,7828,8371,8372",
  [154] = "00002|319,320",
  [173] = "00023|1527,1729,1532,1730,1535,178,183,181,1544,1734,1538,1539,1735,1540,1738,1977,1536,1740,1537,3216,1541,1542,1741",
  [178] = "00010|1524,1525,1745,1976,281,1748,1519,1518,1456,1526",
  [191] = "00011|10327,10328,10329,10330,10331,342,341,339,928,1043,1044",
  [14807] = "00035|932,933,934,1103,1104,1768,1467,110,1770,1772,1756,1760,4456,4556,7223,7224,7240,7242,7244,7241,7245,7247,9430,9553,9557,9558,9559,9561,10981,10982,10983,10984,10985,10986,7399",
  [14821] = "00025|6135,1091,6136,1092,6137,6138,6139,6140,6141,6786,1093,6142,1094,6143,6144,1095,1097,6145,6146,1096,6337,1098,1099,1100,1101",
  [14822] = "00025|6147,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,6148,1089,1090",
  [14823] = "00199|1242,1504,1231,1505,1232,1506,1233,1507,1234,1508,1235,1509,1236,1510,1237,1511,1238,1512,1239,1513,1240,1514,1241,1515,1361,1372,1366,1362,1371,1369,1375,1374,1370,1363,1365,1364,1373,1376,1377,2596,1368,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1367,1388,1389,1390,1392,1393,1391,1394,1753,1754,2856,2857,2858,2859,2860,2861,2868,2862,2863,2864,2865,2866,2869,2867,2872,2873,2874,2884,2885,2875,2882,3256,3257,3258,2879,2880,2883,2881,2870,3236,4018,4019,4048,4049,4050,4051,4052,4053,4054,4055,4022,4023,4024,4025,4026,4027,4028,4030,4031,4029,4032,4033,4034,4035,4036,4037,4038,4039,4040,4041,4042,4043,4044,4045,4046,4047,4074,4075,4713,4714,4715,4716,4717,4728,4718,4719,4720,4721,4722,4723,4724,4725,4726,4727,4639,4640,4641,4642,4643,4654,4655,4656,4644,4659,4660,4661,4645,4662,4663,4664,4646,4665,4666,4667,4647,4668,4669,4670,4648,4671,4672,4673,4649,4674,4675,4676,4650,4677,4678,4679,4651,4680,4681,4682,4652,4684,4683,4685,4653,4686,4687,4688,4657,4658,4821,4822,4820,4823",
  [15096] = "00080|5724,5725,5726,5727,5728,5729,5730,5731,5732,5733,5734,5735,5736,5737,5738,5739,5773,5774,5578,5555,5556,5557,5558,5756,5559,5560,5561,5562,5564,5563,5565,5566,5554,5553,5567,5568,5569,5570,5572,5571,5573,5575,5574,5576,5577,5964,5965,5966,5967,5968,5969,5970,5971,5972,5973,5974,5975,5976,5977,5981,6150,6151,6152,6153,6154,6155,6156,6157,6158,6159,6160,6161,6162,6163,6164,6165,6166,6167,6168,6170",
  [15164] = "00249|
  [15176] = "00013|1462,1464,1465,3018,4729,4730,1102,8514,8515,8516,7400,7401,7402",
  [15219] = "00005|338,8278,8286,8367,8408",
  [15227] = "00003|9594,9595,9596",
  [15233] = "00148|9258,9259,10192,9260,9261,10193,9262,9263,10194,9266,9267,10195,9268,9269,10196,9271,9272,10197,9273,9274,10198,9275,9276,10199,9277,9278,9279,10200,9280,9282,9284,9285,9286,9287,9288,9289,9290,9292,9293,9294,9295,9297,9298,9300,9301,9302,9303,9304,9306,9308,9310,9311,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9327,9328,9329,9330,9331,9332,9333,9334,9336,9337,9338,9339,9340,9341,9342,9343,9349,9351,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,10201,10202,10203,10204,10205,10206,10207,10208,10209,10210,10211,10212,10213,10214,10215,10216,10217,10218,10219,10220,10221,10222,10223,10224,10225,10226,10227,10228,10229,10230,10231,10232,10233,10234,10235,10236,10237,10238,10239,10240,10241,10242,10243,10244,10245,10246,10247,10248,10249,10250,10251,10252",
  [15253] = "00003|10060,10181,10184",
  [15264] = "00190|10878,10879,10880,10881,10882,10883,10884,10885,10886,10887,10888,10889,10890,10893,10891,10894,10892,10895,10896,10897,10898,10899,10900,10901,10902,10903,10904,10907,10910,11406,10911,10912,10913,10914,10920,10921,10922,10923,10924,10925,10926,10927,10915,10916,10917,10919,10928,10929,10930,10931,10932,10933,10934,10935,10936,10937,10938,10939,11407,11408,11409,11410,11411,11412,11413,11414,11415,11416,11417,11418,10940,10941,10942,10943,10944,10945,10946,10947,10948,10949,10950,10951,10952,10953,10954,10955,10956,10957,10959,10960,10961,10962,10963,10964,10965,10966,10967,10968,10969,10970,10971,10972,10973,10974,10975,10976,10977,10978,10979,10980,11877,11878,11879,11880,11881,11882,11883,11884,11885,11886,11887,11888,11889,11890,11891,11892,11893,11894,11895,11896,11897,11898,11899,11900,11901,11902,11903,11904,11905,11906,11907,11908,11909,11910,11911,11912,12117,11954,11955,11956,12118,11957,11958,11959,12119,11960,11961,11962,12120,11963,11964,11965,12121,11966,11967,11968,12122,11969,11970,11971,12123,11972,11973,11974,12124,11975,11976,11977,12125,11978,11979,11980,12126,11981,11982,11983,12127,11984,11985,11986",
  [15281] = "00004|11234,11235,11236,11237",
  build = "25864",
  version = "7.3.5",
}

--hooksecurefunc("GetAchievementInfo", print)
CoreDependCall("Blizzard_AchievementUI", function()
    --据说组队的时候看成就也很卡，尚未解决

    --当成就面板打开并选中一个成就，或者统计面板打开时，CRITERIA_UPDATE 会触发对应面板的UPDATE，放个技能都会触发
    AchievementFrameStats:UnregisterEvent("CRITERIA_UPDATE")

    --GetStatistic(ID) is quick GetStatistic(CAT,INDEX) is slow
    local cats = GetStatisticsCategoryList() table.insert(cats, -2)
    local first = true
    for _, c in pairs(cats) do
        if IDS[c] then
            local num = tonumber(IDS[c]:sub(1,5))
            if num == GetCategoryNumAchievements(c) then
                IDS[c] = { strsplit(",", IDS[c]:sub(7)) }
                for i, v in ipairs(IDS[c]) do
                    IDS[c][i] = tonumber(v)
                end
            else
                IDS[c] = nil
            end
        end
        if not IDS[c] then
            if first then U1Message("成就统计项目有变动，请反馈此问题") first = false end
        end
    end

    --解决比较成就时选统计卡死的问题
    GetAchievementInfo_origin_U1 = GetAchievementInfo
    local version, build = GetBuildInfo()
    local retrieveFromData = version == IDS.version
    local GetAchievementInfoFix = function(category, index)
        if IDS[category] then
            return IDS[category][index] or GetAchievementInfo_origin_U1(category, index)
        else
            return GetAchievementInfo_origin_U1(category, index)
        end
    end
    AchievementFrameComparisonStats = AchievementFrameComparisonStatsContainer --bug @ AchievementFrame_SelectStatisticByAchievementID
    setfenv(AchievementFrameComparison_UpdateStats, setmetatable({ GetAchievementInfo = GetAchievementInfoFix }, { __index = _G }))

    GetStatistic_origin_U1 = GetStatistic
    _G.GetStatistic = function(category, index)
        if index ~= nil then
            local cat = IDS[category]
            cat = cat and cat[index]
            if cat then
                return GetStatistic_origin_U1(cat)
            else
                return GetStatistic_origin_U1(category, index)
            end
        else
            return GetStatistic_origin_U1(category, index)
        end
    end
end)

--[[
--GetStatisticsCategoryList GetCategoryList 是固定的
--achievementFunctions.selectedCategory
--STAT_FUNCTIONS  AchievementFrameStats_Update AchievementFrameCategories_Update 这里遍历ACHIEVEMENTUI_CATEGORIES时，GetCategoryNumAchievements，GetStatistic会很卡
--ACHIEVEMENT_FUNCTIONS GetCategoryList AchievementFrameAchievements_Update
/run for _, v in pairs(GetCategoryList()) do local n=GetCategoryInfo(v) if n=="绝版" or n=="光辉事迹" then print(v, n) end end

local _GetAchievementInfo = GetAchievementInfo_origin_U1 or GetAchievementInfo
local _GetStatistic = GetStatistic_origin_U1 or GetStatistic
local skip = { [15234]=1, [81]=1, }
local data = {}
data.version, data.build = GetBuildInfo()
local cats = GetStatisticsCategoryList() table.insert(cats, -2)
for _, cat in pairs(cats) do
  local name, parent = GetCategoryInfo(cat)
  if not skip[cat] and not skip[parent] then
    local t, n = {}, GetCategoryNumAchievements(cat)
    for k=1, n do
      local quantity, skip, id = _GetStatistic(cat, k)
      t[k] = id
      if skip then print(cat, k, id) end
    end
    data[cat] = format("%05d", n) .. "|" .. table.concat(t, ",")
  end
end
wowluacopy(data)
--]]